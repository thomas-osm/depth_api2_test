<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
<servlet>
    <servlet-name>org.osm.depth.upload.OSMAPIApplication</servlet-name>
     <init-param>
         <param-name>org.osm.upload.dataDirectory</param-name>
         <param-value>${org.osm.upload.dataDirectory}</param-value>
<!--          <param-value>C:\osmfiles\</param-value> -->
     </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>org.osm.depth.upload.OSMAPIApplication</servlet-name>
    <url-pattern>/api2/*</url-pattern>
  </servlet-mapping>

    <servlet>
        <servlet-name>api-docs</servlet-name>
        <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>
        <init-param>
            <param-name>api.version</param-name>
            <param-value>1.0</param-value>
        </init-param>
        <init-param>
            <param-name>swagger.api.version</param-name>
            <param-value>1.3</param-value>
        </init-param>
        <init-param>
            <param-name>swagger.api.basepath</param-name>
            <param-value>http://localhost:8100/org.osm.upload.depth/api2</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
  
  <!-- This is the cross domain scripting filter -->
  <filter>
    <filter-name>CorsFilter</filter-name>
    <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
    <init-param>
      <param-name>cors.allowed.origins</param-name>
      <param-value>*</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.methods</param-name>
      <param-value>GET, POST, HEAD, PUT, DELETE, OPTIONS</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.headers</param-name>
      <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Access-Control-Allow-Origin</param-value>
    </init-param>
    <init-param>
      <param-name>cors.supportedHeaders</param-name>
      <param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified, Access-Control-Allow-Origin</param-value>
    </init-param>
    <init-param>
      <param-name>cors.exposed.headers</param-name>
      <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
    </init-param>
    <init-param>
      <param-name>cors.support.credentials</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>cors.preflight.maxage</param-name>
      <param-value>10</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CorsFilter</filter-name>
    <url-pattern>/api2/*</url-pattern>
  </filter-mapping>
  <!-- one datastore for the uploads and the other one for processed data -->
  <resource-ref>
    <description>Postgres Datasource</description>
    <res-ref-name>jdbc/postgres</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  <resource-ref>
    <description>Postgres Datasource</description>
    <res-ref-name>jdbc/depth</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
    <!-- the mail server -->
	<resource-ref>
	  <description>
	    Resource reference to a factory for javax.mail.Session
	    instances that may be used for sending electronic mail
	    messages, preconfigured to connect to the appropriate
	    SMTP server.
	  </description>
	  <res-ref-name>
	    mail/Session
	  </res-ref-name>
	  <res-type>
	    javax.mail.Session
	  </res-type>
	  <res-auth>
	    Container
	  </res-auth>
	</resource-ref>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Depth upload</web-resource-name>
      <url-pattern>/api2/*</url-pattern>
      <http-method>DELETE</http-method>
      <http-method>PUT</http-method>
      <http-method>HEAD</http-method>
      <http-method>TRACE</http-method>
      <http-method>GET</http-method>
      <http-method>POST</http-method>
    </web-resource-collection>
    <web-resource-collection>
      <web-resource-name>User Management</web-resource-name>
      <url-pattern>/api2/users</url-pattern>
      <http-method>DELETE</http-method>
      <http-method>PUT</http-method>
      <http-method>HEAD</http-method>
      <http-method>TRACE</http-method>
      <http-method>GET</http-method>
    </web-resource-collection>
    <auth-constraint>
      <role-name>USER</role-name>
      <role-name>ADMIN</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Depth upload</web-resource-name>
      <url-pattern>/api2/*</url-pattern>
      <http-method>OPTIONS</http-method>
    </web-resource-collection>
    <!-- required to create users -->
    <web-resource-collection>
      <web-resource-name>Public</web-resource-name>
      <url-pattern>/api2/users</url-pattern>
      <http-method>OPTIONS</http-method>
      <http-method>POST</http-method>
    </web-resource-collection>
    <!-- anyone may reset his password -->
    <web-resource-collection>
      <web-resource-name>PasswordReset</web-resource-name>
      <url-pattern>/api2/users/reset</url-pattern>
      <http-method>OPTIONS</http-method>
      <http-method>POST</http-method>
    </web-resource-collection>
    <!-- captchas must be available to everyone to register -->
    <web-resource-collection>
      <web-resource-name>OptionsAllwaysOn</web-resource-name>
      <url-pattern>/api2/users/captcha</url-pattern>
      <http-method>OPTIONS</http-method>
      <http-method>POST</http-method>
    </web-resource-collection>
    <!-- everyone may list the gauges we have -->
    <web-resource-collection>
      <web-resource-name>Gauges</web-resource-name>
      <url-pattern>/api2/gauge</url-pattern>
      <http-method>OPTIONS</http-method>
      <http-method>GET</http-method>
    </web-resource-collection>
    <!-- Show the licenses of the tracks in the map -->
    <web-resource-collection>
      <web-resource-name>License</web-resource-name>
      <url-pattern>/api2/license</url-pattern>
      <http-method>OPTIONS</http-method>
      <http-method>GET</http-method>
    </web-resource-collection>
    <!-- how much users do we have is visible to everyone -->
    <web-resource-collection>
      <web-resource-name>Status</web-resource-name>
      <url-pattern>/api2/stats</url-pattern>
      <http-method>OPTIONS</http-method>
      <http-method>GET</http-method>
    </web-resource-collection>
  </security-constraint>
  <login-config>
    <auth-method>BASIC</auth-method>
  </login-config>
</web-app>